<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.su.blog.dao.IpDao">
  <resultMap id="BaseResultMap" type="com.su.blog.entity.Ip">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="auth" jdbcType="BIT" property="auth" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.su.blog.entity.Ip">
    <result column="ip" jdbcType="LONGVARCHAR" property="ip" />
  </resultMap>
  <sql id="Base_Column_List">
    id, auth, userId
  </sql>
  <sql id="Blob_Column_List">
    ip
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ip
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ip
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.su.blog.entity.Ip">
    insert into ip (id, auth, userId, 
      ip)
    values (#{id,jdbcType=INTEGER}, #{auth,jdbcType=BIT}, #{userId,jdbcType=INTEGER},
      #{ip,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.su.blog.entity.Ip">
    insert into ip
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="auth != null">
        auth,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="ip != null">
        ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="auth != null">
        #{auth,jdbcType=BIT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.su.blog.entity.Ip">
    update ip
    <set>
      <if test="auth != null">
        auth = #{auth,jdbcType=BIT},
      </if>
      <if test="userId != null">
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.su.blog.entity.Ip">
    update ip
    set auth = #{auth,jdbcType=BIT},
      userId = #{userId,jdbcType=INTEGER},
      ip = #{ip,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.su.blog.entity.Ip">
    update ip
    set auth = #{auth,jdbcType=BIT},
      userId = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>